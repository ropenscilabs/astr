% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ast_modify.R
\name{ast_modify}
\alias{ast_modify}
\title{Modify an R function}
\usage{
ast_modify(x, from, to, if_many = "random")
}
\arguments{
\item{x}{an object of class \code{ast}}

\item{from}{(character) character string to replace. note that we look
for an exact match}

\item{to}{(character) character string to put in place of \code{from}}

\item{if_many}{(character) if multiple matches to the \code{from} parameter
input, should we randomly select one to replace, replace the first instance,
or replace all? one of: first, all, random}
}
\value{
same as the input, an object of class \code{ast}, but modified
}
\description{
Modify an R function
}
\details{
we check that the \code{from} input has a match in the function
data, if not, we fail out
}
\examples{
foo <- function(x) {
  x + 1
}
foo(5)

# decompose the function
df <- ast_decompose(foo)
df

# modify an aspect of the function
out <- ast_modify(x = df, from = "+", to = "-")
out
class(out)
attributes(out)

# more examples
bar <- function(x) x / 6
(z <- ast_decompose(bar))
ast_modify(z, from = "/", to = "*")

# to get the new function, pass through ast_recompose
b <- ast_modify(z, from = "/", to = "*")
newbar <- ast_recompose(b, TRUE)
bar(7)
eval(newbar)(7)

# multiple from matches
foo <- function(x) {
  w <- x + 1
  w + 5
}
foo(1)
x <- ast_decompose(foo)
(w <- ast_modify(x, "+", "-"))
eval(ast_recompose(w, TRUE))(1)

# if_many options
ast_modify(x, "+", "-", if_many = "random")
ast_modify(x, "+", "-", if_many = "random")
ast_modify(x, "+", "-", if_many = "random")
ast_modify(x, "+", "-", if_many = "first")
ast_modify(x, "+", "-", if_many = "all")
}
